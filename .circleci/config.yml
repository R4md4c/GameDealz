version: 2.1
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: cimg/android:2023.11
    resource_class: large
    environment:
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dkotlin.incremental=false"
    steps:
      - checkout
      - run:
          name: Prepare gradle.properties
          command: source environmentSetup.sh && copyEnvVarsToGradleProperties
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run Static Code Analysis
          command: ./gradlew detekt
      - run:
          name: Run Tests
          command: ./gradlew lintDebug testDebug --stacktrace
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results
  generate-apk:
    docker:
      - image: cimg/android:2023.11
    resource_class: large
    steps:
      - checkout
      - run:
          name: Prepare gradle.properties
          command: source environmentSetup.sh && copyEnvVarsToGradleProperties
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Prepare keystore
          command: |
            echo $KEY_STORE_BASE64 | base64 -d | tee keystore gamedealz.keystore > /dev/null
      - run:
          name: Assemble Release
          command: ./gradlew assembleRelease

# Orchestrate our job run sequence
workflows:
  build:
    jobs:
      - build
      - generate-apk
